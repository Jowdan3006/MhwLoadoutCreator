// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MhwLoadoutCreator.Models.Armor;
//
//    var armorApi = ArmorApi.FromJson(jsonString);
using System;
using System.Collections.Generic;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace MhwLoadoutCreator.Models.Armor.Api
{
    public partial class ArmorApi
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("rank", NullValueHandling = NullValueHandling.Ignore)]
        public string Rank { get; set; }

        [JsonProperty("rarity", NullValueHandling = NullValueHandling.Ignore)]
        public int? Rarity { get; set; }

        [JsonProperty("defense", NullValueHandling = NullValueHandling.Ignore)]
        public Defense Defense { get; set; }

        [JsonProperty("resistances", NullValueHandling = NullValueHandling.Ignore)]
        public Resistances Resistances { get; set; }

        [JsonProperty("attributes", NullValueHandling = NullValueHandling.Ignore)]
        public Attributes Attributes { get; set; }

        [JsonProperty("slots", NullValueHandling = NullValueHandling.Ignore)]
        public List<Slot> Slots { get; set; }

        [JsonProperty("skills", NullValueHandling = NullValueHandling.Ignore)]
        public List<Skill> Skills { get; set; }

        [JsonProperty("armorSet")]
        public ArmorSet ArmorSet { get; set; }

        [JsonProperty("assets")]
        public Assets Assets { get; set; }

        [JsonProperty("crafting", NullValueHandling = NullValueHandling.Ignore)]
        public Crafting Crafting { get; set; }
    }

    public partial class ArmorSet
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("rank", NullValueHandling = NullValueHandling.Ignore)]
        public string Rank { get; set; }

        [JsonProperty("pieces", NullValueHandling = NullValueHandling.Ignore)]
        public List<int> Pieces { get; set; }

        [JsonProperty("bonus")]
        public int? Bonus { get; set; }
    }

    public partial class Assets
    {
        [JsonProperty("imageMale")]
        public Uri ImageMale { get; set; }

        [JsonProperty("imageFemale")]
        public Uri ImageFemale { get; set; }
    }

    public partial class Attributes
    {
        [JsonProperty("requiredGender", NullValueHandling = NullValueHandling.Ignore)]
        public string RequiredGender { get; set; }
    }

    public partial class Crafting
    {
        [JsonProperty("materials", NullValueHandling = NullValueHandling.Ignore)]
        public List<Material> Materials { get; set; }
    }

    public partial class Material
    {
        [JsonProperty("quantity", NullValueHandling = NullValueHandling.Ignore)]
        public int? Quantity { get; set; }

        [JsonProperty("item", NullValueHandling = NullValueHandling.Ignore)]
        public Item Item { get; set; }
    }

    public partial class Item
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("rarity", NullValueHandling = NullValueHandling.Ignore)]
        public int? Rarity { get; set; }

        [JsonProperty("carryLimit", NullValueHandling = NullValueHandling.Ignore)]
        public int? CarryLimit { get; set; }

        [JsonProperty("value", NullValueHandling = NullValueHandling.Ignore)]
        public int? Value { get; set; }
    }

    public partial class Defense
    {
        [JsonProperty("base", NullValueHandling = NullValueHandling.Ignore)]
        public int? Base { get; set; }

        [JsonProperty("max", NullValueHandling = NullValueHandling.Ignore)]
        public int? Max { get; set; }

        [JsonProperty("augmented", NullValueHandling = NullValueHandling.Ignore)]
        public int? Augmented { get; set; }
    }

    public partial class Resistances
    {
        [JsonProperty("fire", NullValueHandling = NullValueHandling.Ignore)]
        public int? Fire { get; set; }

        [JsonProperty("water", NullValueHandling = NullValueHandling.Ignore)]
        public int? Water { get; set; }

        [JsonProperty("ice", NullValueHandling = NullValueHandling.Ignore)]
        public int? Ice { get; set; }

        [JsonProperty("thunder", NullValueHandling = NullValueHandling.Ignore)]
        public int? Thunder { get; set; }

        [JsonProperty("dragon", NullValueHandling = NullValueHandling.Ignore)]
        public int? Dragon { get; set; }
    }

    public partial class Skill
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; }

        [JsonProperty("level", NullValueHandling = NullValueHandling.Ignore)]
        public int? Level { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("modifiers", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, int> Modifiers { get; set; }

        [JsonProperty("skill", NullValueHandling = NullValueHandling.Ignore)]
        public int? SkillSkill { get; set; }

        [JsonProperty("skillName", NullValueHandling = NullValueHandling.Ignore)]
        public string SkillName { get; set; }
    }

    public partial class Slot
    {
        [JsonProperty("rank", NullValueHandling = NullValueHandling.Ignore)]
        public int? Rank { get; set; }
    }

    public partial class ArmorApi
    {
        public static List<ArmorApi> FromJson(string json) => JsonConvert.DeserializeObject<List<ArmorApi>>(json, MhwLoadoutCreator.Models.Armor.Api.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<ArmorApi> self) => JsonConvert.SerializeObject(self, MhwLoadoutCreator.Models.Armor.Api.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
